#include <iostream>
#include <string>
#include <stdexcept>
using namespace std;

class Automat {
private:
    static int start_state;
    static vector<vector<int>> sq;
    static vector<int> q;
    static vector<char> s;
    int current_state;

public:
    Automat() {
        current_state = start_state;
    }

    static int find(char c) {
        for (int i = 0; i < s.size(); i++) {
            if (c == s[i]) {
                return i;
            }
        }
        return -1;
    }

    void new_char(char c) {
        int pos = find(c);
        if (pos == -1) {
            throw runtime_error("No such letter in the alphabet");
        }
        current_state = sq[pos][current_state - 1];
    }

    int get_current_state() {
        return current_state;
    }
};

int Automat::start_state = 1;
vector<vector<int>> Automat::sq = {{2, 6, 3, 1, 4, 2}, {3, 2, 4, 4, 6, 5}};
vector<int> Automat::q = {1, 2, 3, 4, 5, 6};
vector<char> Automat::s = {'a', 'b'};

int main() {
    try {
        Automat automat;
        string input;
        cin >> input;

        for (char c : input) {
            automat.new_char(c);
        }

        cout << "Final state: " << automat.get_current_state() << endl;
    } catch (const exception& ex) {
        cout << ex.what() << endl;
    }

    return 0;
}
